{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp1\\\\htdocs\\\\Nice-o\\\\front-end\\\\src\\\\components\\\\EditProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfile = ({\n  location\n}) => {\n  _s();\n  // Initialize editedData with an empty object\n  const [editedData, setEditedData] = useState({});\n\n  // Check if location and location.state are defined\n  if (!location || !location.state) {\n    // Handle the case when location or location.state is undefined\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error: User data not available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  const userData = location.state;\n\n  // Update editedData inside the if block\n  setEditedData({\n    ...userData\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSaveChanges = async () => {\n    try {\n      // Replace 'http://localhost:8000/api/user/{id}' with the actual endpoint for updating user profiles\n      const response = await fetch(`http://localhost:8000/api/user/${userData.id}`, {\n        method: 'PUT',\n        // or 'PATCH' depending on your API\n        headers: {\n          'Content-Type': 'application/json'\n          // Add any additional headers needed for authentication or other purposes\n        },\n        body: JSON.stringify(editedData)\n      });\n      if (!response.ok) {\n        // Handle the case where the API request was not successful\n        console.error('API request failed:', response.statusText);\n        // You might want to display an error message to the user\n        return;\n      }\n\n      // Handle the case where the API request was successful\n      console.log('User profile updated successfully');\n      // You might want to display a success message to the user or navigate to another page\n    } catch (error) {\n      console.error('Error updating user profile:', error);\n      // Handle other errors such as network issues\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          name: \"name\",\n          value: editedData.name || '',\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: handleSaveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProfile, \"gxqcuEQ+UhqSEbfD6gqEhSEYQCc=\");\n_c = EditProfile;\nexport default EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditProfile","location","_s","editedData","setEditedData","state","children","fileName","_jsxFileName","lineNumber","columnNumber","userData","handleInputChange","e","name","value","target","prevData","handleSaveChanges","response","fetch","id","method","headers","body","JSON","stringify","ok","console","error","statusText","log","className","htmlFor","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/xampp1/htdocs/Nice-o/front-end/src/components/EditProfile.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst EditProfile = ({ location }) => {\r\n  // Initialize editedData with an empty object\r\n  const [editedData, setEditedData] = useState({});\r\n\r\n  // Check if location and location.state are defined\r\n  if (!location || !location.state) {\r\n    // Handle the case when location or location.state is undefined\r\n    return (\r\n      <div>\r\n        <p>Error: User data not available.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const userData = location.state;\r\n\r\n  // Update editedData inside the if block\r\n  setEditedData({ ...userData });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      // Replace 'http://localhost:8000/api/user/{id}' with the actual endpoint for updating user profiles\r\n      const response = await fetch(`http://localhost:8000/api/user/${userData.id}`, {\r\n        method: 'PUT', // or 'PATCH' depending on your API\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // Add any additional headers needed for authentication or other purposes\r\n        },\r\n        body: JSON.stringify(editedData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // Handle the case where the API request was not successful\r\n        console.error('API request failed:', response.statusText);\r\n        // You might want to display an error message to the user\r\n        return;\r\n      }\r\n\r\n      // Handle the case where the API request was successful\r\n      console.log('User profile updated successfully');\r\n      // You might want to display a success message to the user or navigate to another page\r\n    } catch (error) {\r\n      console.error('Error updating user profile:', error);\r\n      // Handle other errors such as network issues\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Profile</h2>\r\n      <form>\r\n        {/* Add input fields for editing */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={editedData.name || ''}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        {/* Add other input fields similarly */}\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleSaveChanges}>\r\n          Save Changes\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}